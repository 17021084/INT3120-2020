{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/quyetnguyen/MyTimeTable/components/calendar/calendar.js\";\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { ExpandableCalendar, AgendaList, CalendarProvider, WeekCalendar } from 'react-native-calendars';\nvar today = new Date().toISOString().split('T')[0];\nvar fastDate = getPastDate(3);\nvar futureDates = getFutureDates(9);\nvar dates = [fastDate, today].concat(futureDates);\nvar themeColor = '#00AAAF';\nvar lightThemeColor = '#EBF9F9';\n\nfunction getFutureDates(days) {\n  var array = [];\n\n  for (var index = 1; index <= days; index++) {\n    var date = new Date(Date.now() + 864e5 * index);\n    var dateString = date.toISOString().split('T')[0];\n    array.push(dateString);\n  }\n\n  return array;\n}\n\nfunction getPastDate(days) {\n  return new Date(Date.now() - 864e5 * days).toISOString().split('T')[0];\n}\n\nvar ITEMS = [{\n  title: dates[0],\n  data: [{\n    hour: '12am',\n    duration: '1h',\n    title: 'Ashtanga Yoga'\n  }]\n}, {\n  title: dates[1],\n  data: [{\n    hour: '4pm',\n    duration: '1h',\n    title: 'Pilates ABC'\n  }, {\n    hour: '5pm',\n    duration: '1h',\n    title: 'Vinyasa Yoga'\n  }]\n}, {\n  title: dates[2],\n  data: [{\n    hour: '1pm',\n    duration: '1h',\n    title: 'Ashtanga Yoga'\n  }, {\n    hour: '2pm',\n    duration: '1h',\n    title: 'Deep Streches'\n  }, {\n    hour: '3pm',\n    duration: '1h',\n    title: 'Private Yoga'\n  }]\n}, {\n  title: dates[3],\n  data: [{\n    hour: '12am',\n    duration: '1h',\n    title: 'Ashtanga Yoga'\n  }]\n}, {\n  title: dates[4],\n  data: [{}]\n}, {\n  title: dates[5],\n  data: [{\n    hour: '9pm',\n    duration: '1h',\n    title: 'Pilates Reformer'\n  }, {\n    hour: '10pm',\n    duration: '1h',\n    title: 'Ashtanga'\n  }, {\n    hour: '11pm',\n    duration: '1h',\n    title: 'TRX'\n  }, {\n    hour: '12pm',\n    duration: '1h',\n    title: 'Running Group'\n  }]\n}, {\n  title: dates[6],\n  data: [{\n    hour: '12am',\n    duration: '1h',\n    title: 'Ashtanga Yoga'\n  }]\n}, {\n  title: dates[7],\n  data: [{}]\n}, {\n  title: dates[8],\n  data: [{\n    hour: '9pm',\n    duration: '1h',\n    title: 'Pilates Reformer'\n  }, {\n    hour: '10pm',\n    duration: '1h',\n    title: 'Ashtanga'\n  }, {\n    hour: '11pm',\n    duration: '1h',\n    title: 'TRX'\n  }, {\n    hour: '12pm',\n    duration: '1h',\n    title: 'Running Group'\n  }]\n}, {\n  title: dates[9],\n  data: [{\n    hour: '1pm',\n    duration: '1h',\n    title: 'Ashtanga Yoga'\n  }, {\n    hour: '2pm',\n    duration: '1h',\n    title: 'Deep Streches'\n  }, {\n    hour: '3pm',\n    duration: '1h',\n    title: 'Private Yoga'\n  }]\n}, {\n  title: dates[10],\n  data: [{\n    hour: '12am',\n    duration: '1h',\n    title: 'Ashtanga Yoga'\n  }]\n}];\n\nvar ExpandableCalendarScreen = function (_Component) {\n  _inherits(ExpandableCalendarScreen, _Component);\n\n  function ExpandableCalendarScreen() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ExpandableCalendarScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ExpandableCalendarScreen)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onDateChanged = function () {};\n\n    _this.onMonthChange = function () {};\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item;\n\n      if (_.isEmpty(item)) {\n        return _this.renderEmptyItem();\n      }\n\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this.itemPressed(item.title);\n        },\n        style: styles.item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        }\n      }, React.createElement(Text, {\n        style: styles.itemHourText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        }\n      }, item.hour), React.createElement(Text, {\n        style: styles.itemDurationText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        }\n      }, item.duration)), React.createElement(Text, {\n        style: styles.itemTitleText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        }\n      }, item.title), React.createElement(View, {\n        style: styles.itemButtonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        }\n      }, React.createElement(Button, {\n        color: 'grey',\n        title: 'Info',\n        onPress: _this.buttonPressed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        }\n      })));\n    };\n\n    _this.getMarkedDates = function () {\n      var marked = {};\n      ITEMS.forEach(function (item) {\n        if (item.data && item.data.length > 0 && !_.isEmpty(item.data[0])) {\n          marked[item.title] = {\n            marked: true\n          };\n        }\n      });\n      return marked;\n    };\n\n    _this.getTheme = function () {\n      var disabledColor = 'grey';\n      return {\n        arrowColor: 'black',\n        arrowStyle: {\n          padding: 0\n        },\n        monthTextColor: 'black',\n        textMonthFontSize: 16,\n        textMonthFontFamily: 'HelveticaNeue',\n        textMonthFontWeight: 'bold',\n        textSectionTitleColor: 'black',\n        textDayHeaderFontSize: 12,\n        textDayHeaderFontFamily: 'HelveticaNeue',\n        textDayHeaderFontWeight: 'normal',\n        dayTextColor: themeColor,\n        textDayFontSize: 18,\n        textDayFontFamily: 'HelveticaNeue',\n        textDayFontWeight: '500',\n        textDayStyle: {\n          marginTop: Platform.OS === 'android' ? 2 : 4\n        },\n        selectedDayBackgroundColor: themeColor,\n        selectedDayTextColor: 'white',\n        textDisabledColor: disabledColor,\n        dotColor: themeColor,\n        selectedDotColor: 'white',\n        disabledDotColor: disabledColor,\n        dotStyle: {\n          marginTop: -2\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(ExpandableCalendarScreen, [{\n    key: \"buttonPressed\",\n    value: function buttonPressed() {\n      Alert.alert('show more');\n    }\n  }, {\n    key: \"itemPressed\",\n    value: function itemPressed(id) {\n      Alert.alert(id);\n    }\n  }, {\n    key: \"renderEmptyItem\",\n    value: function renderEmptyItem() {\n      return React.createElement(View, {\n        style: styles.emptyItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        }\n      }, React.createElement(Text, {\n        style: styles.emptyItemText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        }\n      }, \"No Events Planned\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CalendarProvider, {\n        date: ITEMS[0].title,\n        onDateChanged: this.onDateChanged,\n        onMonthChange: this.onMonthChange,\n        showTodayButton: true,\n        disabledOpacity: 0.6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        }\n      }, this.props.weekView ? React.createElement(WeekCalendar, {\n        firstDay: 1,\n        markedDates: this.getMarkedDates(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        }\n      }) : React.createElement(ExpandableCalendar, {\n        firstDay: 1,\n        markedDates: this.getMarkedDates(),\n        leftArrowImageSource: require(\"../img/previous.png\"),\n        rightArrowImageSource: require(\"../img/next.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        }\n      }), React.createElement(AgendaList, {\n        sections: ITEMS,\n        extraData: this.state,\n        renderItem: this.renderItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        }\n      }));\n    }\n  }]);\n\n  return ExpandableCalendarScreen;\n}(Component);\n\nexport { ExpandableCalendarScreen as default };\nvar styles = StyleSheet.create({\n  calendar: {\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  section: {\n    backgroundColor: lightThemeColor,\n    color: 'grey',\n    textTransform: 'capitalize'\n  },\n  item: {\n    padding: 20,\n    backgroundColor: 'white',\n    borderBottomWidth: 1,\n    borderBottomColor: 'lightgrey',\n    flexDirection: 'row'\n  },\n  itemHourText: {\n    color: 'black'\n  },\n  itemDurationText: {\n    color: 'grey',\n    fontSize: 12,\n    marginTop: 4,\n    marginLeft: 4\n  },\n  itemTitleText: {\n    color: 'black',\n    marginLeft: 16,\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  itemButtonContainer: {\n    flex: 1,\n    alignItems: 'flex-end'\n  },\n  emptyItem: {\n    paddingLeft: 20,\n    height: 52,\n    justifyContent: 'center',\n    borderBottomWidth: 1,\n    borderBottomColor: 'lightgrey'\n  },\n  emptyItemText: {\n    color: 'lightgrey',\n    fontSize: 14\n  }\n});","map":{"version":3,"sources":["/home/quyetnguyen/MyTimeTable/components/calendar/calendar.js"],"names":["_","React","Component","ExpandableCalendar","AgendaList","CalendarProvider","WeekCalendar","today","Date","toISOString","split","fastDate","getPastDate","futureDates","getFutureDates","dates","concat","themeColor","lightThemeColor","days","array","index","date","now","dateString","push","ITEMS","title","data","hour","duration","ExpandableCalendarScreen","onDateChanged","onMonthChange","renderItem","item","isEmpty","renderEmptyItem","itemPressed","styles","itemHourText","itemDurationText","itemTitleText","itemButtonContainer","buttonPressed","getMarkedDates","marked","forEach","length","getTheme","disabledColor","arrowColor","arrowStyle","padding","monthTextColor","textMonthFontSize","textMonthFontFamily","textMonthFontWeight","textSectionTitleColor","textDayHeaderFontSize","textDayHeaderFontFamily","textDayHeaderFontWeight","dayTextColor","textDayFontSize","textDayFontFamily","textDayFontWeight","textDayStyle","marginTop","Platform","OS","selectedDayBackgroundColor","selectedDayTextColor","textDisabledColor","dotColor","selectedDotColor","disabledDotColor","dotStyle","Alert","alert","id","emptyItem","emptyItemText","props","weekView","require","state","StyleSheet","create","calendar","paddingLeft","paddingRight","section","backgroundColor","color","textTransform","borderBottomWidth","borderBottomColor","flexDirection","fontSize","marginLeft","fontWeight","flex","alignItems","height","justifyContent"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport React, {Component} from 'react';\nimport {\n  Platform,\n  Alert,\n  StyleSheet,\n  View,\n  Text,\n  TouchableOpacity,\n  Button\n} from 'react-native';\nimport {ExpandableCalendar, AgendaList, CalendarProvider, WeekCalendar} from 'react-native-calendars';\n\n\nconst today = new Date().toISOString().split('T')[0];\nconst fastDate = getPastDate(3); \nconst futureDates = getFutureDates(9);\nconst dates = [fastDate, today].concat(futureDates);\nconst themeColor = '#00AAAF';\nconst lightThemeColor = '#EBF9F9';\n\nfunction getFutureDates(days) {\n  const array = [];\n  for (let index = 1; index <= days; index++) {\n    const date = new Date(Date.now() + (864e5 * index)); // 864e5 == 86400000 == 24*60*60*1000\n    const dateString = date.toISOString().split('T')[0];\n    array.push(dateString);\n  }\n  return array;\n}\n\nfunction getPastDate(days) {\n  return new Date(Date.now() - (864e5 * days)).toISOString().split('T')[0];\n}\n\nconst ITEMS = [\n  {title: dates[0], data: [{hour: '12am', duration: '1h', title: 'Ashtanga Yoga'}]},\n  {title: dates[1], data: [{hour: '4pm', duration: '1h', title: 'Pilates ABC'}, {hour: '5pm', duration: '1h', title: 'Vinyasa Yoga'}]},\n  {title: dates[2], data: [{hour: '1pm', duration: '1h', title: 'Ashtanga Yoga'}, {hour: '2pm', duration: '1h', title: 'Deep Streches'}, {hour: '3pm', duration: '1h', title: 'Private Yoga'}]},\n  {title: dates[3], data: [{hour: '12am', duration: '1h', title: 'Ashtanga Yoga'}]},\n  {title: dates[4], data: [{}]},\n  {title: dates[5], data: [{hour: '9pm', duration: '1h', title: 'Pilates Reformer'}, {hour: '10pm', duration: '1h', title: 'Ashtanga'}, {hour: '11pm', duration: '1h', title: 'TRX'}, {hour: '12pm', duration: '1h', title: 'Running Group'}]},\n  {title: dates[6], data: [{hour: '12am', duration: '1h', title: 'Ashtanga Yoga'}]},\n  {title: dates[7], data: [{}]},\n  {title: dates[8], data: [{hour: '9pm', duration: '1h', title: 'Pilates Reformer'}, {hour: '10pm', duration: '1h', title: 'Ashtanga'}, {hour: '11pm', duration: '1h', title: 'TRX'}, {hour: '12pm', duration: '1h', title: 'Running Group'}]},\n  {title: dates[9], data: [{hour: '1pm', duration: '1h', title: 'Ashtanga Yoga'}, {hour: '2pm', duration: '1h', title: 'Deep Streches'}, {hour: '3pm', duration: '1h', title: 'Private Yoga'}]},\n  {title: dates[10], data: [{hour: '12am', duration: '1h', title: 'Ashtanga Yoga'}]}\n];\n\nexport default class ExpandableCalendarScreen extends Component {\n\n  onDateChanged = (/* date, updateSource */) => {\n    // console.warn('ExpandableCalendarScreen onDateChanged: ', date, updateSource);\n    // fetch and set data for date + week ahead\n  }\n\n  onMonthChange = (/* month, updateSource */) => {\n    // console.warn('ExpandableCalendarScreen onMonthChange: ', month, updateSource);\n  }\n  \n  buttonPressed() {\n    Alert.alert('show more');\n  }\n\n  itemPressed(id) {\n    Alert.alert(id);\n  }\n\n  renderEmptyItem() {\n    return (\n      <View style={styles.emptyItem}>\n        <Text style={styles.emptyItemText}>No Events Planned</Text>\n      </View>\n    );\n  }\n\n  renderItem = ({item}) => {\n    if (_.isEmpty(item)) {\n      return this.renderEmptyItem();\n    }\n    \n    return (\n      <TouchableOpacity \n        onPress={() => this.itemPressed(item.title)} \n        style={styles.item}\n      >\n        <View>\n          <Text style={styles.itemHourText}>{item.hour}</Text>\n          <Text style={styles.itemDurationText}>{item.duration}</Text>\n        </View>\n        <Text style={styles.itemTitleText}>{item.title}</Text>\n        <View style={styles.itemButtonContainer}>\n          <Button color={'grey'} title={'Info'} onPress={this.buttonPressed}/>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n\n  getMarkedDates = () => {\n    const marked = {};\n    ITEMS.forEach(item => {\n      // NOTE: only mark dates with data\n      if (item.data && item.data.length > 0 && !_.isEmpty(item.data[0])) {\n        marked[item.title] = {marked: true};\n      }\n    });\n    return marked;\n  }\n\n  getTheme = () => {\n    const disabledColor = 'grey';\n    \n    return {\n      // arrows\n      arrowColor: 'black',\n      arrowStyle: {padding: 0},\n      // month\n      monthTextColor: 'black',\n      textMonthFontSize: 16,\n      textMonthFontFamily: 'HelveticaNeue',\n      textMonthFontWeight: 'bold',\n      // day names\n      textSectionTitleColor: 'black',\n      textDayHeaderFontSize: 12,\n      textDayHeaderFontFamily: 'HelveticaNeue',\n      textDayHeaderFontWeight: 'normal',\n      // dates\n      dayTextColor: themeColor,\n      textDayFontSize: 18,\n      textDayFontFamily: 'HelveticaNeue',\n      textDayFontWeight: '500',\n      textDayStyle: {marginTop: Platform.OS === 'android' ? 2 : 4},\n      // selected date\n      selectedDayBackgroundColor: themeColor,\n      selectedDayTextColor: 'white',\n      // disabled date\n      textDisabledColor: disabledColor,\n      // dot (marked date)\n      dotColor: themeColor,\n      selectedDotColor: 'white',\n      disabledDotColor: disabledColor,\n      dotStyle: {marginTop: -2}\n    };\n  }\n\n  render() {    \n    return (\n      <CalendarProvider \n        date={ITEMS[0].title} \n        onDateChanged={this.onDateChanged} \n        onMonthChange={this.onMonthChange}\n        showTodayButton \n        disabledOpacity={0.6}\n        // theme={{\n        //   todayButtonTextColor: themeColor\n        // }} \n        // todayBottomMargin={16}\n      > \n        {this.props.weekView ? \n          <WeekCalendar\n            firstDay={1}\n            markedDates={this.getMarkedDates()}\n          /> :\n          <ExpandableCalendar \n            // horizontal={false}\n            // hideArrows\n            // disablePan\n            // hideKnob\n            // initialPosition={ExpandableCalendar.positions.OPEN}\n            // calendarStyle={styles.calendar}\n            // headerStyle={styles.calendar} // for horizontal only\n            // disableWeekScroll\n            // theme={this.getTheme()}\n            firstDay={1}\n            markedDates={this.getMarkedDates()} // {'2019-06-01': {marked: true}, '2019-06-02': {marked: true}, '2019-06-03': {marked: true}};\n            leftArrowImageSource={require('../img/previous.png')}\n            rightArrowImageSource={require('../img/next.png')}\n          />\n        }\n        <AgendaList\n          sections={ITEMS}\n          extraData={this.state}\n          renderItem={this.renderItem}\n          // sectionStyle={styles.section}\n        />\n      </CalendarProvider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  calendar: {\n    paddingLeft: 20, \n    paddingRight: 20\n  },\n  section: {\n    backgroundColor: lightThemeColor, \n    color: 'grey',\n    textTransform: 'capitalize'\n  },\n  item: {\n    padding: 20, \n    backgroundColor: 'white', \n    borderBottomWidth: 1, \n    borderBottomColor: 'lightgrey', \n    flexDirection: 'row'\n  },\n  itemHourText: {\n    color: 'black'\n  },\n  itemDurationText: {\n    color: 'grey', \n    fontSize: 12, \n    marginTop: 4,\n    marginLeft: 4\n  },\n  itemTitleText: {\n    color: 'black', \n    marginLeft: 16, \n    fontWeight: 'bold', \n    fontSize: 16\n  },\n  itemButtonContainer: {\n    flex: 1, \n    alignItems: 'flex-end'\n  },\n  emptyItem: {\n    paddingLeft: 20,\n    height: 52, \n    justifyContent: 'center',\n    borderBottomWidth: 1, \n    borderBottomColor: 'lightgrey' \n  },\n  emptyItemText: {\n    color: 'lightgrey',\n    fontSize: 14\n  }\n});\n"]},"metadata":{},"sourceType":"module"}
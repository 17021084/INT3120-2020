{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/quyetnguyen/MyTimeTable/App.js\";\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Block } from \"react-native-web/dist/index\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { Calendar } from \"./components/calendar\";\nimport { DayView } from \"./components/dayview\";\nimport { NewTask } from \"./components/news\";\nimport { ViewTask } from \"./components/tasks\";\nimport { ViewExam } from \"./components/exams\";\nvar Tab = createBottomTabNavigator();\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NavigationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        }\n      }, React.createElement(Tab.Navigator, {\n        screenOptions: function screenOptions(_ref) {\n          var route = _ref.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var focused = _ref2.focused,\n                  color = _ref2.color,\n                  size = _ref2.size;\n              var ionicon;\n\n              if (route.name === 'Calendar') {\n                ionicon = focused ? 'md-calendar' : 'ios-calendar';\n              } else if (route.name === 'DayView') {\n                ionicon = focused ? 'md-journal' : 'ios-today';\n              } else if (route.name === 'New') {\n                ionicon = focused ? 'md-add' : 'md-add-circle-outline';\n              } else if (route.name === 'Task') {\n                ionicon = focused ? 'md-checkmark' : 'md-checkmark-circle-outline';\n              } else if (route.name === 'Exam') {\n                ionicon = focused ? 'ios-book' : 'ios-bookmarks';\n              }\n\n              return React.createElement(Ionicons, {\n                name: ionicon,\n                size: size,\n                color: color,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 34\n                }\n              });\n            }\n          };\n        },\n        tabBarOptions: {\n          activeTintColor: 'tomato',\n          inactiveTintColor: 'gray'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Calendar\",\n        component: Calendar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"DayView\",\n        component: DayView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"New\",\n        component: NewTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Task\",\n        component: ViewTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Exam\",\n        component: ViewExam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["/home/quyetnguyen/MyTimeTable/App.js"],"names":["React","Block","Ionicons","createBottomTabNavigator","NavigationContainer","Calendar","DayView","NewTask","ViewTask","ViewExam","Tab","App","route","tabBarIcon","focused","color","size","ionicon","name","activeTintColor","inactiveTintColor","Component"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;SACoBC,K;AACpB,SAAQC,QAAR,QAAwB,oBAAxB;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAAQC,QAAR;AACA,SAAQC,OAAR;AACA,SAAQC,OAAR;AACA,SAAQC,QAAR;AACA,SAAQC,QAAR;AAEA,IAAMC,GAAG,GAAGP,wBAAwB,EAApC;;IAEqBQ,G;;;;;;;;;;;6BACX;AACT,aACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD,CAAK,SAAL;AACE,QAAA,aAAa,EAAE;AAAA,cAAGC,KAAH,QAAGA,KAAH;AAAA,iBAAgB;AAC7BC,YAAAA,UAAU,EAAE,2BAA8B;AAAA,kBAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,kBAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,kBAAXC,IAAW,SAAXA,IAAW;AACxC,kBAAIC,OAAJ;;AAEA,kBAAIL,KAAK,CAACM,IAAN,KAAe,UAAnB,EAA+B;AAC7BD,gBAAAA,OAAO,GAAGH,OAAO,GAAG,aAAH,GAAmB,cAApC;AACD,eAFD,MAEO,IAAIF,KAAK,CAACM,IAAN,KAAe,SAAnB,EAA8B;AACnCD,gBAAAA,OAAO,GAAGH,OAAO,GAAG,YAAH,GAAkB,WAAnC;AACD,eAFM,MAEA,IAAIF,KAAK,CAACM,IAAN,KAAe,KAAnB,EAA0B;AAC/BD,gBAAAA,OAAO,GAAGH,OAAO,GAAG,QAAH,GAAc,uBAA/B;AACD,eAFM,MAEA,IAAIF,KAAK,CAACM,IAAN,KAAe,MAAnB,EAA2B;AAChCD,gBAAAA,OAAO,GAAGH,OAAO,GAAG,cAAH,GAAoB,6BAArC;AACD,eAFM,MAEA,IAAIF,KAAK,CAACM,IAAN,KAAe,MAAnB,EAA2B;AAChCD,gBAAAA,OAAO,GAAGH,OAAO,GAAG,UAAH,GAAgB,eAAjC;AACD;;AACD,qBAAO,oBAAC,QAAD;AAAU,gBAAA,IAAI,EAAEG,OAAhB;AAAyB,gBAAA,IAAI,EAAED,IAA/B;AAAqC,gBAAA,KAAK,EAAED,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAED;AAjB4B,WAAhB;AAAA,SADjB;AAoBE,QAAA,aAAa,EAAE;AACbI,UAAAA,eAAe,EAAE,QADJ;AAEbC,UAAAA,iBAAiB,EAAE;AAFN,SApBjB;AAAA;AAAA;AAAA;AAAA;AAAA,SAyBE,oBAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,UAAjB;AAA4B,QAAA,SAAS,EAAEf,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,QAzBF,EA0BE,oBAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,SAAjB;AAA2B,QAAA,SAAS,EAAEC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,QA1BF,EA2BE,oBAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,KAAjB;AAAuB,QAAA,SAAS,EAAEC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,QA3BF,EA4BE,oBAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,MAAjB;AAAwB,QAAA,SAAS,EAAEC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,QA5BF,EA6BE,oBAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,MAAjB;AAAwB,QAAA,SAAS,EAAEC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,QA7BF,CADF,CADF;AAkCE;;;;EApC8BT,KAAK,CAACqB,S;;SAAlBV,G","sourcesContent":["import * as React from 'react';\nimport { Text, View,Block } from 'react-native';\nimport {Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport {Calendar} from './components/calendar' \nimport {DayView} from './components/dayview' \nimport {NewTask} from './components/news' \nimport {ViewTask} from './components/tasks' \nimport {ViewExam} from './components/exams' \n \nconst Tab = createBottomTabNavigator();\n \nexport default class App extends React.Component {\n render() {\n return (\n   <NavigationContainer>\n     <Tab.Navigator\n       screenOptions={({ route }) => ({\n         tabBarIcon: ({ focused, color, size }) => {\n           let ionicon;\n \n           if (route.name === 'Calendar') {\n             ionicon = focused ? 'md-calendar' : 'ios-calendar';\n           } else if (route.name === 'DayView') {\n             ionicon = focused ? 'md-journal' : 'ios-today';\n           } else if (route.name === 'New') {\n             ionicon = focused ? 'md-add' : 'md-add-circle-outline';\n           } else if (route.name === 'Task') {\n             ionicon = focused ? 'md-checkmark' : 'md-checkmark-circle-outline';\n           } else if (route.name === 'Exam') {\n             ionicon = focused ? 'ios-book' : 'ios-bookmarks';\n           }\n           return <Ionicons name={ionicon} size={size} color={color} />;\n                           \n         },\n       })}\n       tabBarOptions={{\n         activeTintColor: 'tomato',\n         inactiveTintColor: 'gray',\n       }}\n     >\n       <Tab.Screen name=\"Calendar\" component={Calendar} />\n       <Tab.Screen name=\"DayView\" component={DayView} />\n       <Tab.Screen name=\"New\" component={NewTask} />\n       <Tab.Screen name=\"Task\" component={ViewTask} />\n       <Tab.Screen name=\"Exam\" component={ViewExam} />\n     </Tab.Navigator>\n   </NavigationContainer>\n )};\n}\n\n"]},"metadata":{},"sourceType":"module"}
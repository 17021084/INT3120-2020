{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/quyetnguyen/MyTimeTable/components/calendar/calendar.js\";\nimport React from 'react';\nimport mobiscroll from '@mobiscroll/react';\nimport '@mobiscroll/react/dist/css/mobiscroll.min.css';\nmobiscroll.settings = {\n  theme: 'ios',\n  themeVariant: 'light'\n};\n\nvar Calendar = function (_React$Component) {\n  _inherits(Calendar, _React$Component);\n\n  function Calendar(props) {\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Calendar).call(this, props));\n\n    _this.changeView = function (event) {\n      var view;\n\n      switch (event.target.value) {\n        case 'month':\n          view = {\n            calendar: {\n              type: 'month'\n            },\n            eventList: {\n              type: 'month',\n              scrollable: true\n            }\n          };\n          break;\n\n        case 'week':\n          view = {\n            calendar: {\n              type: 'week'\n            },\n            eventList: {\n              type: 'week',\n              scrollable: true\n            }\n          };\n          break;\n\n        case 'day':\n          view = {\n            eventList: {\n              type: 'day',\n              scrollable: true\n            }\n          };\n          break;\n      }\n\n      _this.setState({\n        view: event.target.value,\n        calView: view\n      });\n    };\n\n    _this.state = {\n      view: 'month',\n      myEvents: [],\n      calView: {\n        calendar: {\n          type: 'month'\n        },\n        eventList: {\n          type: 'month',\n          scrollable: true\n        }\n      }\n    };\n    mobiscroll.util.getJson('https://trial.mobiscroll.com/events/', function (events) {\n      _this.setState({\n        myEvents: events\n      });\n    }, 'jsonp');\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"md-switching-view-cont\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        }\n      }, React.createElement(mobiscroll.Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        }\n      }, React.createElement(mobiscroll.Segmented, {\n        value: \"month\",\n        name: \"view\",\n        checked: this.state.view === 'month',\n        onChange: this.changeView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        }\n      }, \"Month\"), React.createElement(mobiscroll.Segmented, {\n        value: \"week\",\n        name: \"view\",\n        checked: this.state.view === 'week',\n        onChange: this.changeView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        }\n      }, \"Week\"), React.createElement(mobiscroll.Segmented, {\n        value: \"day\",\n        name: \"view\",\n        checked: this.state.view === 'day',\n        onChange: this.changeView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        }\n      }, \"Day\")), React.createElement(\"div\", {\n        className: \"md-switching-view-cal-cont\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        }\n      }, React.createElement(mobiscroll.Eventcalendar, {\n        display: \"inline\",\n        view: this.state.calView,\n        data: this.state.myEvents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        }\n      })));\n    }\n  }]);\n\n  return Calendar;\n}(React.Component);","map":{"version":3,"sources":["/home/quyetnguyen/MyTimeTable/components/calendar/calendar.js"],"names":["React","mobiscroll","settings","theme","themeVariant","Calendar","props","changeView","event","view","target","value","calendar","type","eventList","scrollable","setState","calView","state","myEvents","util","getJson","events","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport mobiscroll from '@mobiscroll/react';\nimport '@mobiscroll/react/dist/css/mobiscroll.min.css';\n\nmobiscroll.settings = {\n    theme: 'ios',\n    themeVariant: 'light'\n};\n\nclass Calendar extends React.Component {\n     constructor(props) {\n        super(props);\n\n        this.state = {\n            view: 'month',\n            myEvents: [] ,\n            calView: {\n                calendar: { type: 'month' },\n                eventList: { type: 'month', scrollable: true }\n            }\n        };\n        \n        mobiscroll.util.getJson('https://trial.mobiscroll.com/events/', (events) => {\n            this.setState({ myEvents: events });\n        }, 'jsonp');\n    }\n    \n    changeView = (event) => {\n        var view;\n        switch (event.target.value) {\n            case 'month':\n                view = {\n                    calendar: { type: 'month' },\n                    eventList: { type: 'month', scrollable: true }\n                };\n                break;\n            case 'week':\n                view = {\n                    calendar: { type: 'week' },\n                    eventList: { type: 'week', scrollable: true }\n                };\n                break;\n            case 'day':\n                view = {\n                    eventList: { type: 'day', scrollable: true }\n                };\n                break;\n        }\n    \n        this.setState({\n            view: event.target.value,\n            calView: view\n        });\n    }\n    \n    render () {\n        return (\n            <div className=\"md-switching-view-cont\">\n                <mobiscroll.Form>\n                    <mobiscroll.Segmented value=\"month\" name=\"view\" checked={this.state.view === 'month'} onChange={this.changeView}>\n                        Month\n                    </mobiscroll.Segmented>\n                    <mobiscroll.Segmented value=\"week\" name=\"view\" checked={this.state.view === 'week'} onChange={this.changeView}>\n                        Week\n                    </mobiscroll.Segmented>\n                    <mobiscroll.Segmented value=\"day\" name=\"view\" checked={this.state.view === 'day'} onChange={this.changeView}>\n                        Day\n                    </mobiscroll.Segmented>\n                </mobiscroll.Form>\n                <div className=\"md-switching-view-cal-cont\">\n                    <mobiscroll.Eventcalendar\n                        display=\"inline\"\n                        view={this.state.calView}\n                        data={this.state.myEvents}\n                    />\n                </div>\n            </div>\n        );\n    }    \n}\n"]},"metadata":{},"sourceType":"module"}
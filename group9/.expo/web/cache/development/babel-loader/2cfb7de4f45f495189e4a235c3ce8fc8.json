{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/quyetnguyen/INT3120-2020/group9/components/calendar/calendar.js\";\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Agenda } from 'react-native-calendars';\nimport { Header } from 'react-native-elements';\nvar styles = StyleSheet.create({\n  item: {\n    backgroundColor: 'white',\n    flex: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n    marginTop: 17\n  },\n  emptyDate: {\n    height: 15,\n    flex: 1,\n    paddingTop: 30\n  },\n  container: {\n    flex: 1\n  }\n});\n\nvar Calendar = function (_Component) {\n  _inherits(Calendar, _Component);\n\n  function Calendar(props) {\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Calendar).call(this, props));\n    _this.state = {\n      items: {\n        '2020-03-19': [{\n          name: 'toan',\n          start: '9:00',\n          end: '13:00'\n        }],\n        '2020-03-20': [{\n          name: 'tieng anh',\n          start: '3:00',\n          end: '15:00'\n        }]\n      },\n      isVisible: true\n    };\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"renderItem\",\n    value: function renderItem(item) {\n      return React.createElement(TouchableOpacity, {\n        style: [styles.item, {\n          height: item.height\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        }\n      }, item.name));\n    }\n  }, {\n    key: \"renderEmptyDate\",\n    value: function renderEmptyDate() {\n      return React.createElement(View, {\n        style: styles.emptyDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        }\n      }, \"This is empty date!\"));\n    }\n  }, {\n    key: \"rowHasChanged\",\n    value: function rowHasChanged(r1, r2) {\n      return r1.name !== r2.name;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        }\n      }, React.createElement(Header, {\n        statusBarProps: {\n          barStyle: 'light-content'\n        },\n        barStyle: \"light-content\",\n        centerComponent: {\n          text: 'Calendar',\n          style: {\n            color: '#fff',\n            fontSize: 25\n          }\n        },\n        containerStyle: {\n          backgroundColor: '#3D6DCC',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        }\n      }), React.createElement(Agenda, {\n        currentDate: '2020-3-21',\n        items: this.state.items,\n        renderItem: this.renderItem.bind(this),\n        rowHasChanged: this.rowHasChanged.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        }\n      }));\n    }\n  }]);\n\n  return Calendar;\n}(Component);\n\nexport { Calendar as default };","map":{"version":3,"sources":["/home/quyetnguyen/INT3120-2020/group9/components/calendar/calendar.js"],"names":["React","Component","Agenda","Header","styles","StyleSheet","create","item","backgroundColor","flex","borderRadius","padding","marginRight","marginTop","emptyDate","height","paddingTop","container","Calendar","props","state","items","name","start","end","isVisible","r1","r2","barStyle","text","style","color","fontSize","justifyContent","renderItem","bind","rowHasChanged"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Text, View, Dimensions, TouchableOpacity,Alert, StyleSheet} from 'react-native';\nimport {Agenda} from 'react-native-calendars';\nimport {Header} from 'react-native-elements';\n\nconst styles = StyleSheet.create({\n  item: {\n    backgroundColor: 'white',\n    flex: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n    marginTop: 17\n  },\n  emptyDate: {\n    height: 15,\n    flex:1,\n    paddingTop: 30\n  },\n  container: {\n    flex:1,\n  }  \n});\n\nexport default class Calendar extends Component {\n  \n constructor(props) {\n  super(props);\n\n  this.state = {\n      items: {\n        '2020-03-19': [{name:'toan',start:'9:00',end:'13:00'}],\n        '2020-03-20': [{name:'tieng anh',start:'3:00',end:'15:00'}] \n      },\n      isVisible: true,\n    };\n  }\n\n\n  renderItem(item) {\n    return (\n      <TouchableOpacity \n        style={[styles.item, {height: item.height}]} \n        //onPress={}\n      >\n        <Text>{item.name}</Text>\n      </TouchableOpacity>\n    );\n  }\n\n  renderEmptyDate() {\n    return (\n      <View style={styles.emptyDate}>\n        <Text>This is empty date!</Text>\n      </View>\n    );\n  }\n  \n  rowHasChanged(r1, r2) {\n    return r1.name !== r2.name;\n  }\n\n  render () {\n    return (\n      <View style={styles.container}>\n        <Header\n          statusBarProps={{ barStyle: 'light-content' }}\n          barStyle=\"light-content\" \n          centerComponent={{ text: 'Calendar', style: { color: '#fff', fontSize:25 } }}\n          containerStyle={{\n            backgroundColor: '#3D6DCC',\n            justifyContent: 'center',\n          }}\n        />\n        \n        <Agenda\n          currentDate={'2020-3-21'}\n          items={this.state.items}\n          //loadItemsForMonth={this.loadItems.bind(this)}\n          renderItem={this.renderItem.bind(this)}\n          rowHasChanged={this.rowHasChanged.bind(this)}\n        />\n      </View>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
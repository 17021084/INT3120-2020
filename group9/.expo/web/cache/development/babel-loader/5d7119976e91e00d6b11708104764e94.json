{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/quyetnguyen/MyTimeTable/components/calendar/calendar.js\";\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Calendar } from 'react-native-calendars';\n\nvar CalendarsScreen = function (_Component) {\n  _inherits(CalendarsScreen, _Component);\n\n  function CalendarsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, CalendarsScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CalendarsScreen).call(this, props));\n\n    _this.onDayPress = function (day) {\n      _this.setState({\n        selected: day.dateString\n      });\n    };\n\n    _this.state = {\n      selected: undefined\n    };\n    return _this;\n  }\n\n  _createClass(CalendarsScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        }\n      }, \"Calendar with selectable date\"), React.createElement(Calendar, {\n        style: styles.calendar,\n        hideExtraDays: true,\n        onDayPress: this.onDayPress,\n        markedDates: _defineProperty({}, this.state.selected, {\n          selected: true,\n          disableTouchEvent: true,\n          selectedDotColor: 'orange'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        }\n      }, \"Calendar with week numbers\"), React.createElement(Calendar, {\n        style: styles.calendar,\n        hideExtraDays: true,\n        showWeekNumbers: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        }\n      }, \"Calendar with marked dates and hidden arrows\"), React.createElement(Calendar, {\n        style: styles.calendar,\n        current: '2012-05-16',\n        minDate: '2012-05-10',\n        maxDate: '2012-05-29',\n        firstDay: 1,\n        markedDates: {\n          '2012-05-23': {\n            selected: true,\n            marked: true,\n            disableTouchEvent: true\n          },\n          '2012-05-24': {\n            selected: true,\n            marked: true,\n            dotColor: 'red'\n          },\n          '2012-05-25': {\n            marked: true,\n            dotColor: 'red'\n          },\n          '2012-05-26': {\n            marked: true\n          },\n          '2012-05-27': {\n            disabled: true,\n            activeOpacity: 0\n          }\n        },\n        hideArrows: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        }\n      }, \"Calendar with period marking and spinner\"), React.createElement(Calendar, {\n        current: '2012-05-16',\n        minDate: '2012-05-10',\n        displayLoadingIndicator: true,\n        markingType: 'period',\n        theme: {\n          calendarBackground: '#333248',\n          textSectionTitleColor: 'white',\n          dayTextColor: 'red',\n          todayTextColor: 'white',\n          selectedDayTextColor: 'white',\n          monthTextColor: 'white',\n          indicatorColor: 'white',\n          selectedDayBackgroundColor: '#333248',\n          arrowColor: 'white',\n          'stylesheet.calendar.header': {\n            week: {\n              marginTop: 5,\n              flexDirection: 'row',\n              justifyContent: 'space-between'\n            }\n          }\n        },\n        markedDates: {\n          '2012-05-17': {\n            disabled: true\n          },\n          '2012-05-08': {\n            textColor: 'pink'\n          },\n          '2012-05-09': {\n            textColor: 'pink'\n          },\n          '2012-05-14': {\n            startingDay: true,\n            color: 'green',\n            endingDay: true\n          },\n          '2012-05-21': {\n            startingDay: true,\n            color: 'green'\n          },\n          '2012-05-22': {\n            endingDay: true,\n            color: 'gray'\n          },\n          '2012-05-24': {\n            startingDay: true,\n            color: 'gray'\n          },\n          '2012-05-25': {\n            color: 'gray'\n          },\n          '2012-05-26': {\n            endingDay: true,\n            color: 'gray'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        }\n      }, \"Calendar with multi-dot marking\"), React.createElement(Calendar, {\n        style: styles.calendar,\n        current: '2012-05-16',\n        markingType: 'multi-dot',\n        markedDates: {\n          '2012-05-08': {\n            selected: true,\n            dots: [{\n              key: 'vacation',\n              color: 'blue',\n              selectedDotColor: 'white'\n            }, {\n              key: 'massage',\n              color: 'red',\n              selectedDotColor: 'white'\n            }]\n          },\n          '2012-05-09': {\n            disabled: true,\n            dots: [{\n              key: 'vacation',\n              color: 'green',\n              selectedDotColor: 'red'\n            }, {\n              key: 'massage',\n              color: 'red',\n              selectedDotColor: 'green'\n            }]\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        }\n      }, \"Calendar with multi-period marking\"), React.createElement(Calendar, {\n        style: styles.calendar,\n        current: '2012-05-16',\n        markingType: 'multi-period',\n        markedDates: {\n          '2012-05-16': {\n            periods: [{\n              startingDay: true,\n              endingDay: false,\n              color: 'green'\n            }, {\n              startingDay: true,\n              endingDay: false,\n              color: 'orange'\n            }]\n          },\n          '2012-05-17': {\n            periods: [{\n              startingDay: false,\n              endingDay: true,\n              color: 'green'\n            }, {\n              startingDay: false,\n              endingDay: true,\n              color: 'orange'\n            }, {\n              startingDay: true,\n              endingDay: false,\n              color: 'pink'\n            }]\n          },\n          '2012-05-18': {\n            periods: [{\n              startingDay: true,\n              endingDay: true,\n              color: 'orange'\n            }, {\n              color: 'transparent'\n            }, {\n              startingDay: false,\n              endingDay: false,\n              color: 'pink'\n            }]\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        }\n      }, \"Custom calendar with custom marking type\"), React.createElement(Calendar, {\n        style: styles.calendar,\n        onDayLongPress: this.onDayLongPress,\n        hideExtraDays: true,\n        current: '2018-03-01',\n        minDate: '2018-03-01',\n        markingType: 'custom',\n        markedDates: {\n          '2018-03-01': {\n            customStyles: {\n              container: {\n                backgroundColor: 'white',\n                elevation: 2\n              },\n              text: {\n                color: 'red'\n              }\n            }\n          },\n          '2018-03-08': {\n            selected: true\n          },\n          '2018-03-09': {\n            customStyles: {\n              container: {\n                backgroundColor: 'red',\n                elevation: 4\n              },\n              text: {\n                color: 'white'\n              }\n            }\n          },\n          '2018-03-14': {\n            customStyles: {\n              container: {\n                backgroundColor: 'green'\n              },\n              text: {\n                color: 'white'\n              }\n            }\n          },\n          '2018-03-15': {\n            customStyles: {\n              container: {\n                backgroundColor: 'black',\n                elevation: 2\n              },\n              text: {\n                color: 'yellow'\n              }\n            }\n          },\n          '2018-03-21': {\n            disabled: true\n          },\n          '2018-03-28': {\n            customStyles: {\n              text: {\n                color: 'black',\n                fontWeight: 'bold'\n              }\n            }\n          },\n          '2018-03-30': {\n            customStyles: {\n              container: {\n                backgroundColor: 'pink',\n                elevation: 4,\n                borderColor: 'purple',\n                borderWidth: 5\n              },\n              text: {\n                marginTop: 3,\n                fontSize: 11,\n                color: 'black'\n              }\n            }\n          },\n          '2018-03-31': {\n            customStyles: {\n              container: {\n                backgroundColor: 'orange',\n                borderRadius: 0\n              }\n            }\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        }\n      }, \"Calendar with custom day component\"), React.createElement(Calendar, {\n        style: [styles.calendar, {\n          height: 250,\n          borderBottomWidth: 1,\n          borderBottomColor: 'lightgrey'\n        }],\n        dayComponent: function dayComponent(_ref2) {\n          var date = _ref2.date,\n              state = _ref2.state;\n          return React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 256\n            }\n          }, React.createElement(Text, {\n            style: {\n              textAlign: 'center',\n              color: state === 'disabled' ? 'gray' : 'black'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 257\n            }\n          }, date.day));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        }\n      }));\n    }\n  }]);\n\n  return CalendarsScreen;\n}(Component);\n\nexport { CalendarsScreen as default };\nvar styles = StyleSheet.create({\n  calendar: {\n    marginBottom: 10\n  },\n  text: {\n    textAlign: 'center',\n    padding: 10,\n    backgroundColor: 'lightgrey',\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["/home/quyetnguyen/MyTimeTable/components/calendar/calendar.js"],"names":["React","Component","Calendar","CalendarsScreen","props","onDayPress","day","setState","selected","dateString","state","undefined","styles","text","calendar","disableTouchEvent","selectedDotColor","marked","dotColor","disabled","activeOpacity","calendarBackground","textSectionTitleColor","dayTextColor","todayTextColor","selectedDayTextColor","monthTextColor","indicatorColor","selectedDayBackgroundColor","arrowColor","week","marginTop","flexDirection","justifyContent","textColor","startingDay","color","endingDay","dots","key","periods","onDayLongPress","customStyles","container","backgroundColor","elevation","fontWeight","borderColor","borderWidth","fontSize","borderRadius","height","borderBottomWidth","borderBottomColor","date","textAlign","StyleSheet","create","marginBottom","padding"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {StyleSheet, View, ScrollView, Text} from 'react-native';\nimport {Calendar} from 'react-native-calendars';\n\n\nexport default class CalendarsScreen extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      selected: undefined\n    };\n  }\n\n  onDayPress = (day) => {\n    this.setState({selected: day.dateString});\n  }\n\n  render() {\n    return (\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <Text style={styles.text}>Calendar with selectable date</Text>\n        <Calendar\n          style={styles.calendar}\n          hideExtraDays\n          onDayPress={this.onDayPress}\n          markedDates={{\n            [this.state.selected]: {\n              selected: true, \n              disableTouchEvent: true, \n              selectedDotColor: 'orange'\n            }\n          }}\n        />\n\n        <Text style={styles.text}>Calendar with week numbers</Text>\n        <Calendar\n          style={styles.calendar}\n          hideExtraDays\n          showWeekNumbers\n        />\n\n        <Text style={styles.text}>Calendar with marked dates and hidden arrows</Text>\n        <Calendar\n          style={styles.calendar}\n          current={'2012-05-16'}\n          minDate={'2012-05-10'}\n          maxDate={'2012-05-29'}\n          firstDay={1}\n          markedDates={{\n            '2012-05-23': {selected: true, marked: true, disableTouchEvent: true},\n            '2012-05-24': {selected: true, marked: true, dotColor: 'red'},\n            '2012-05-25': {marked: true, dotColor: 'red'},\n            '2012-05-26': {marked: true},\n            '2012-05-27': {disabled: true, activeOpacity: 0}\n          }}\n          hideArrows={true}\n          // disabledByDefault={true}\n        />\n        \n        <Text style={styles.text}>Calendar with period marking and spinner</Text>\n        <Calendar\n          // style={styles.calendar}\n          current={'2012-05-16'}\n          minDate={'2012-05-10'}\n          displayLoadingIndicator\n          markingType={'period'}\n          theme={{\n            calendarBackground: '#333248',\n            textSectionTitleColor: 'white',\n            dayTextColor: 'red',\n            todayTextColor: 'white',\n            selectedDayTextColor: 'white',\n            monthTextColor: 'white',\n            indicatorColor: 'white',\n            selectedDayBackgroundColor: '#333248',\n            arrowColor: 'white',\n            // textDisabledColor: 'red',\n            'stylesheet.calendar.header': {\n              week: {\n                marginTop: 5,\n                flexDirection: 'row',\n                justifyContent: 'space-between'\n              }\n            }\n          }}\n          markedDates={{\n            '2012-05-17': {disabled: true},\n            '2012-05-08': {textColor: 'pink'},\n            '2012-05-09': {textColor: 'pink'},\n            '2012-05-14': {startingDay: true, color: 'green', endingDay: true},\n            '2012-05-21': {startingDay: true, color: 'green'},\n            '2012-05-22': {endingDay: true, color: 'gray'},\n            '2012-05-24': {startingDay: true, color: 'gray'},\n            '2012-05-25': {color: 'gray'},\n            '2012-05-26': {endingDay: true, color: 'gray'}\n          }}\n        />\n\n        <Text style={styles.text}>Calendar with multi-dot marking</Text>\n        <Calendar\n          style={styles.calendar}\n          current={'2012-05-16'}\n          markingType={'multi-dot'}\n          markedDates={{\n            '2012-05-08': {\n              selected: true,\n              dots: [\n                {key: 'vacation', color: 'blue', selectedDotColor: 'white'}, \n                {key: 'massage', color: 'red', selectedDotColor: 'white'}\n              ]\n            },\n            '2012-05-09': {\n              disabled: true,\n              dots: [\n                {key: 'vacation', color: 'green', selectedDotColor: 'red'}, \n                {key: 'massage', color: 'red', selectedDotColor: 'green'}\n              ]\n            }\n          }}\n        />\n\n        <Text style={styles.text}>Calendar with multi-period marking</Text>\n        <Calendar\n          style={styles.calendar}\n          current={'2012-05-16'}\n          markingType={'multi-period'}\n          markedDates={{\n            '2012-05-16': {\n              periods: [\n                {startingDay: true, endingDay: false, color: 'green'},\n                {startingDay: true, endingDay: false, color: 'orange'}\n              ]\n            },\n            '2012-05-17': {\n              periods: [\n                {startingDay: false, endingDay: true, color: 'green'},\n                {startingDay: false, endingDay: true, color: 'orange'},\n                {startingDay: true, endingDay: false, color: 'pink'}\n              ]\n            },\n            '2012-05-18': {\n              periods: [\n                {startingDay: true, endingDay: true, color: 'orange'},\n                {color: 'transparent'},\n                {startingDay: false, endingDay: false, color: 'pink'}\n              ]\n            }\n          }}\n        />\n        \n        <Text style={styles.text}>Custom calendar with custom marking type</Text>\n        <Calendar\n          style={styles.calendar}\n          onDayLongPress={this.onDayLongPress}\n          hideExtraDays\n          current={'2018-03-01'}\n          minDate={'2018-03-01'}\n          markingType={'custom'}\n          markedDates={{\n            '2018-03-01': {\n              customStyles: {\n                container: {\n                  backgroundColor: 'white',\n                  elevation: 2\n                },\n                text: {\n                  color: 'red'\n                }\n              }\n            },\n            '2018-03-08': {\n              selected: true\n            },\n            '2018-03-09': {\n              customStyles: {\n                container: {\n                  backgroundColor: 'red',\n                  elevation: 4\n                },\n                text: {\n                  color: 'white'\n                }\n              }\n            },\n            '2018-03-14': {\n              customStyles: {\n                container: {\n                  backgroundColor: 'green'\n                },\n                text: {\n                  color: 'white'\n                }\n              }\n            },\n            '2018-03-15': {\n              customStyles: {\n                container: {\n                  backgroundColor: 'black',\n                  elevation: 2\n                },\n                text: {\n                  color: 'yellow'\n                }\n              }\n            },\n            '2018-03-21': {\n              disabled: true\n            },\n            '2018-03-28': {\n              customStyles: {\n                text: {\n                  color: 'black',\n                  fontWeight: 'bold'\n                }\n              }\n            },\n            '2018-03-30': {\n              customStyles: {\n                container: {\n                  backgroundColor: 'pink',\n                  elevation: 4,\n                  borderColor: 'purple',\n                  borderWidth: 5\n                },\n                text: {\n                  marginTop: 3,\n                  fontSize: 11,\n                  color: 'black'\n                }\n              }\n            },\n            '2018-03-31': {\n              customStyles: {\n                container: {\n                  backgroundColor: 'orange',\n                  borderRadius: 0\n                }\n              }\n            }\n          }}\n        />\n\n        <Text style={styles.text}>Calendar with custom day component</Text>\n        <Calendar\n          style={[\n            styles.calendar,\n            {\n              height: 250, \n              borderBottomWidth: 1, \n              borderBottomColor: 'lightgrey'\n            }\n          ]}\n          dayComponent={({date, state}) => {\n            return (\n              <View>\n                <Text style={{textAlign: 'center', color: state === 'disabled' ? 'gray' : 'black'}}>\n                  {date.day}\n                </Text>\n              </View>\n            );\n          }}\n        />\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  calendar: {\n    marginBottom: 10\n  },\n  text: {\n    textAlign: 'center',\n    padding: 10,\n    backgroundColor: 'lightgrey',\n    fontSize: 16\n  }\n});\n"]},"metadata":{},"sourceType":"module"}